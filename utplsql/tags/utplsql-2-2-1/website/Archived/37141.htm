<head><style type="text/css">@import url(wbarchiv.css);</style></head><body><strong><a href="37147.htm">Previous</a> | <a href="37145.htm">Next</a></strong><hr size=0>
<b>Topic:</b> Feedback<br>
<b>Conf:</b> 550, Msg: 37141<br>
<b>From:</b> James Padfield (<a href="mailto:jpadfiel@cellops.com">jpadfiel@cellops.com</a>)<br>
<b>Date:</b> 8/29/00 01:44 AM<br>

<p><title>Feedback James Padfield padders jpadfiel@cellops.com</title>
Steven, a question...<br>
<br>
As I understand it, the underlying test mechanism is a essentially a package consisting of one or (usually) more calls to assertion routines in utAssert e.g. your example for ut#PLVstr.ut#betwn_characters which contains 3 distinct calls to utAlert.<br>
<br>
My question is, what happens if I want to report on the characteristics of this unit test, say by producing a test spec. document?<br>
If the information for these calls to utAlert were themselves held in a table, they could be called dynamically in turn to perform the test and could also be queried in a report/form to generate such a test spec. without having to go in and parse the packages. This might have additional benefits when it comes to the front end, in that test items could, for example, be turned on and off more conveniently by a flag in the row rather than commenting out assertions, or their order could be changed by another flag etc. A matching table might record the result histories for these tests, and hold performance details etc. (it would be nice to know who had run tests when etc. and if the unit was getting faster!).<br>
<br>
Apologies if I have missed something obvious, and also for the excessive use of etc.<br>
<br>
Padders<br>


</body>
